name: Quality Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  WORKING_DIR: 'backend(NestJS)'

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 💾 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.WORKING_DIR }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

  format:
    name: Code Formatting
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 📂 Restore Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.WORKING_DIR }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: 🎨 Check Formatting
        run: |
          echo "::notice::Checking code formatting..."
          npx prettier --check "src/**/*.ts" "test/**/*.ts" || {
            echo "::warning::Formatting issues found. Run 'npm run format' to fix."
            npx prettier --list-different "src/**/*.ts" "test/**/*.ts"
          }
        continue-on-error: true

  lint:
    name: Code Linting
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 📂 Restore Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.WORKING_DIR }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: 🔍 Run Linter
        run: |
          echo "::notice::Running ESLint..."
          npm run lint || echo "::warning::Linting issues found. Run 'npm run lint:fix' to fix."
        continue-on-error: true

  unit-tests:
    name: Unit Tests
    needs: [format, lint]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 📂 Restore Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.WORKING_DIR }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: 🧪 Run Unit Tests
        run: |
          echo "::notice::Running unit tests..."
          npm run test

  regressive-tests:
    name: Regressive Tests
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: 🚧 Skip Regressive Tests
        run: |
          echo "::notice::Regressive tests temporarily disabled"
          echo "✅ Job skipped successfully"

  build:
    name: Build Application
    needs: regressive-tests
    runs-on: ubuntu-latest
    steps:
      - name: 🚧 Skip Build
        run: |
          echo "::notice::Build temporarily disabled"
          echo "✅ Job skipped successfully"