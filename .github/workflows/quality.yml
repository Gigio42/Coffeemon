name: Quality Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend(NestJS)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend(NestJS)/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: backend(NestJS)/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

  format:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend(NestJS)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend(NestJS)/package-lock.json

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: backend(NestJS)/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: Check Code Formatting (Warning Only)
        run: |
          echo "üîç Verificando formata√ß√£o do c√≥digo..."
          if ! npx prettier --check "src/**/*.ts" "test/**/*.ts"; then
            echo "‚ö†Ô∏è  AVISO: Arquivos com problemas de formata√ß√£o encontrados!"
            echo "üìù Para corrigir automaticamente, execute: npm run format"
            echo "üîß Arquivos que precisam de formata√ß√£o:"
            npx prettier --list-different "src/**/*.ts" "test/**/*.ts" || true
          else
            echo "‚úÖ Todos os arquivos est√£o bem formatados!"
          fi
        continue-on-error: true

  lint:
    needs: format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend(NestJS)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend(NestJS)/package-lock.json

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: backend(NestJS)/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: Run ESLint
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend(NestJS)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend(NestJS)/package-lock.json

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: backend(NestJS)/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: Run Unit Tests
        run: npm run test

  e2e:
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend(NestJS)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend(NestJS)/package-lock.json

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: backend(NestJS)/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: Run E2E Tests
        run: npm run test:e2e

  build:
    needs: [test, e2e]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend(NestJS)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend(NestJS)/package-lock.json

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: backend(NestJS)/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend(NestJS)/package-lock.json') }}

      - name: Build Project
        run: npm run build