name: Quality Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  WORKING_DIR: 'backend(NestJS)'

jobs:
  code-quality:
    name: Code Quality (Linter & Formatter)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: 游닌 Checkout
        uses: actions/checkout@v4

      - name: 游릭 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 游닍 Install Dependencies
        run: npm ci

      - name: 游꿛 Format Check (Warning)
        run: |
          echo "::notice::Checking code formatting..."
          npx prettier --check "src/**/*.ts" "test/**/*.ts" || {
            echo "::warning::Code formatting issues found. Run 'npm run format' to fix."
            npx prettier --list-different "src/**/*.ts" "test/**/*.ts"
          }
        continue-on-error: true

      - name: 游댌 Lint Check (Warning)
        run: |
          echo "::notice::Running ESLint..."
          npm run lint || echo "::warning::Linting issues found. Run 'npm run lint:fix' to fix."
        continue-on-error: true

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: 游닌 Checkout
        uses: actions/checkout@v4

      - name: 游릭 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 游닍 Install Dependencies
        run: npm ci

      - name: 游빍 Run Unit Tests
        run: |
          echo "::notice::Running unit tests..."
          npm run test